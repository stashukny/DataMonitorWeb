@model DataMonitorWeb.Models.Watcher

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script type="text/javascript" language="javascript" src="/Scripts/jquery-3.1.0.js"></script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Watcher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelId, "LevelId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LevelId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientId, "ClientId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownList("ClientId", null, "-- All", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<script type="text/jscript">

            function refreshSources() {                
                var init = "<option>Please Select</option>";
                $('#SourceId').html(init);
                var items = init;
                $.getJSON('/Watchers/Sources_List/' + $('#ClientId').val(), { ClientId: $('#ClientId').val() }, function (data) {                                        
                    $.each(data, function (i, list) {
                    items += "<option value='" + list.Value + "'>" + list.Text + "</option>";
                });
                    $('#SourceId').html(items);
                    selectIfOne('#SourceId');
                });

                $('#MetricId').html(init);

                
            }

            function selectIfOne(selector) {
                var currControl = document.getElementById(control);
                alert(currControl);
                var length = $('$(selector) > option').length;
                alert("test" + length);
                if (length == 2)
                {                    
                    $('$(selector)>option:eq(1)').attr('selected', true);
                    refreshMetrics();
                }
            }

            function refreshMetrics() {                
                $.getJSON('/Watchers/Metrics_List/' + $('#SourceId').val(), { SourceId: $('#SourceId').val() }, function (data) {                                        
                    var items = "<option>Please Select</option>";
                    $.each(data, function (i, list) {
                        items += "<option value='" + list.Value + "'>" + list.Text + "</option>";
                    });
                    $('#MetricId').html(items);
                });
            }

        $(function () {
            $('#ClientId')                
                .change(refreshSources)                
        });

        $(function () {
            $('#SourceId')                
                .change(refreshMetrics)
                
        });
        </script>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SourceId, "SourceId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("SourceId", null, "-- All", new { @class = "form-control" })*@
                <select id="SourceId">
                    <option>Please Select</option>
                </select>
                @Html.ValidationMessageFor(model => model.SourceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetricId, "MetricId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @*@Html.DropDownList("MetricId", null, "-- All", new { @class = "form-control" })*@
                <select id="MetricId">
                    <option>Please Select</option>
                </select>
                @Html.ValidationMessageFor(model => model.MetricId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThreasholdId, "ThreasholdId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ThreasholdId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ThreasholdId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NotificationId, "NotificationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NotificationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NotificationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/site.js"></script>
